name: For each PR and Push
on:
  pull_request:
    paths-ignore:
      - kernel/**
  push:
    paths-ignore:
      - kernel/**
jobs:
  validation:
    runs-on: ubuntu-20.04
    outputs:
      commitid: ${{steps.commitid.outputs.short}}
    steps:
      - name: Setup Dynamic Env
        run: |
          echo "MAKEFLAGS=-j$(nproc)" | tee $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Figure Out Commit Short ID
        id: commitid
        run: |
          echo ::set-output name=short::$(git rev-parse --short HEAD)

      - name: Fake Build
        run: |
          mkdir -p out/${{steps.commitid.outputs.short}}/rel
          touch out/${{steps.commitid.outputs.short}}/rel/hook_{aarch64,x86_64}.tar.gz

      - uses: actions/upload-artifact@v3
        with:
          name: hook-${{steps.commitid.outputs.short}}
          path: out/${{steps.commitid.outputs.short}}/rel/hook_*.tar.gz

  publish-tarballs-latest:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: hook-${{needs.validation.outputs.commitid}}

      - name: Delete Tag
        run: |
          git tag -d latest
          git push origin :latest -f

      - name: Generate Release Notes
        run: |
          generated_release_notes=$(gh api 'repos/{owner}/{repo}/releases/generate-notes' -F tag_name=latest --jq .body)
          cat >>"$GITHUB_ENV" <<-EOF
          	RELEASE_NOTES<<RELEASE_NOTES_EOF
            	These are the release notes for the latest development build of Hook.
            	The build files will be updated on the next merge to main, as such download them before use to avoid surprises.

            	---
            	Commit: ${{needs.validation.outputs.commitid}}
            	---

          	$generated_release_notes
          	RELEASE_NOTES_EOF
          EOF

      - name: Update Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: latest
          message: "Latest development build"
          force_push_tag: true

      - name: Update latest release
        uses: softprops/action-gh-release@v1
        with:
          name: Hook Latest Development Build
          body: ${{env.RELEASE_NOTES}}
          files: hook_*.tar.gz
          prerelease: true
          tag_name: latest
